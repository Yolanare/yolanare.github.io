'use strict';

module.exports = function addScrollbar(wheelz) {
    // styles for scrollbar
    var css = '\n        .wheelz {\n            position: relative;\n        }\n\n        .wheelz-holder {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            right: 0;\n            width: 8px;\n            background: rgba(255, 255, 255, .9);\n            transition: opacity .4s;\n            opacity: 0;\n            z-index: 1000;\n            transform: translateY(0);\n        }\n\n        .wheelz-scrollbar, .wheelz-shadow {\n            position: absolute;\n            top: 0;\n            width: 6px;\n            left: 1px;\n            border-radius: 3px;\n            background: rgba(0, 0, 0, .2);\n        }\n\n        .wheelz-scrollbar {\n            background: rgba(0, 0, 0, .3);\n        }\n\n        .wheelz:hover > .wheelz-holder {\n            opacity: 1;\n        }\n    ';

    // prepend styles to head tag
    var style = document.createElement('style');
    style.type = 'text/css';
    style.appendChild(document.createTextNode(css));
    document.head.prepend(style);

    // create scrollbar holder
    wheelz.$scrollbarHolder = document.createElement('div');
    wheelz.$scrollbarHolder.classList.add('wheelz-holder');

    // create scrollbar - position of scrollbar
    wheelz.$scrollbar = document.createElement('div');
    wheelz.$scrollbar.classList.add('wheelz-scrollbar');

    // create shadow scrollbar - position of scrollbar animated value
    wheelz.$shadowScrollbar = document.createElement('div');
    wheelz.$shadowScrollbar.classList.add('wheelz-shadow');

    // insert to DOM
    wheelz.$scrollbarHolder.appendChild(wheelz.$scrollbar);
    wheelz.$scrollbarHolder.appendChild(wheelz.$shadowScrollbar);
    wheelz.element.appendChild(wheelz.$scrollbarHolder);

    // set size of scrollbar
    wheelz.numbers.scrollbarHeight = wheelz.numbers.height / wheelz.numbers.contentHeight * 100;

    // do render on scroll
    wheelz.on('scroll', render);

    wheelz.on('disable', function () {
        // remove scrollbar
        wheelz.$scrollbarHolder.outerHTML = "";
        delete wheelz.$scrollbarHolder;
    });

    // recalculate and set scrollbars size
    wheelz.on('resize', resize);
    resize();

    function resize() {
        wheelz.numbers.scrollbarHeight = wheelz.numbers.height / wheelz.numbers.contentHeight * 100;
        wheelz.$scrollbar.style.height = wheelz.numbers.scrollbarHeight + '%';
        wheelz.$shadowScrollbar.style.height = wheelz.numbers.scrollbarHeight + '%';
    }

    function render(instances) {
        var scrolled = instances.y.target / wheelz.numbers.maxScroll * (100 - wheelz.numbers.scrollbarHeight);
        var scrolledShadow = instances.y.current / wheelz.numbers.maxScroll * (100 - wheelz.numbers.scrollbarHeight);

        wheelz.$scrollbarHolder.style.transform = 'translate3d(0, ' + instances.y.current + 'px, 0)';
        wheelz.$scrollbar.style.top = scrolled + '%';
        wheelz.$shadowScrollbar.style.top = scrolledShadow + '%';
    }
};